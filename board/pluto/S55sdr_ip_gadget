#! /bin/sh

#
# Author: Phil Greenland <phil@quantulum.co.uk>
#

# Do NOT "set -e"

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="SDR IP Gadget"
NAME=sdr_ip_gadget
DAEMON=/usr/sbin/$NAME
DAEMON_ARGS=""
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

#
# Function that starts the daemon/service
#
do_start()
{
        # Return
        #   0 if daemon has been started
        #   1 if daemon was already running
        #   2 if daemon could not be started
        start-stop-daemon -q -K -p $PIDFILE -x $DAEMON -t > /dev/null \
                && return 1
        start-stop-daemon -q -S -p $PIDFILE -x $DAEMON -b -m -- \
                $DAEMON_ARGS \
                || return 2

	# Tweak interrupt affinity, such that ethernet interrupt is always handled by core0
	eth_int_id=`grep eth0 /proc/interrupts | cut -d: -f1 | tr -d "[:space:]"`
	if [ -n "${eth_int_id}" ]; then
		echo 1 > /proc/irq/${eth_int_id}/smp_affinity
	fi
}

#
# Function that stops the daemon/service
#
do_stop()
{
        # Return
        #   0 if daemon has been stopped
        #   1 if daemon was already stopped
        #   2 if daemon could not be stopped
        #   other if a failure occurred
        start-stop-daemon -q -K -p $PIDFILE -n $NAME
        RETVAL="$?"
        [ "$RETVAL" = 2 ] && return 2
        # Many daemons don't delete their pidfiles when they exit.
        rm -f $PIDFILE
        return "$RETVAL"
}

case "$1" in
  start)
        [ "$VERBOSE" != no ] && echo -n "Starting $DESC $NAME: "
        do_start
        case "$?" in
                0|1) [ "$VERBOSE" != no ] && echo "OK" ;;
                2) [ "$VERBOSE" != no ] && echo "FAIL" ;;
        esac
        ;;
  stop)
        [ "$VERBOSE" != no ] && echo -n "Stopping $DESC $NAME: "
        do_stop
        case "$?" in
                0|1) [ "$VERBOSE" != no ] && echo "OK" ;;
                2) [ "$VERBOSE" != no ] && echo "FAIL" ;;
        esac
        ;;
  status)
       start-stop-daemon -q -K -p $PIDFILE -x $DAEMON -t && exit 0 || exit $?
       ;;
  restart|force-reload)
        echo -n "Restarting $DESC $NAME:"
        do_stop
        case "$?" in
          0|1)
                do_start
                case "$?" in
                        0) echo "OK" ;;
                        1) echo "FAIL" ;; # Old process is still running
                        *) echo "FAIL" ;; # Failed to start
                esac
                ;;
          *)
                # Failed to stop
                echo "FAIL"
                ;;
        esac
        ;;
  *)
        echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
        exit 3
        ;;
esac
